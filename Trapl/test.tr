struct Apple { x: Banana }
struct Banana { }
struct Orange { }

struct Vec<Apple> {}
struct Vec<Banana> {}

fn push<Apple>(v: &Vec<Apple>, e: Apple) {}
fn push<Banana>(v: &Vec<Banana>, e: Banana) {}

fn Apple::new() -> Apple { }

fn test() -> Bool
{
	let a = Apple::new();
	let b = Apple::new();

	a = b;
	a.x = b.x;
	a = b.x;
	a.x = b;

	{
		let a: Int;
		a = 123;
	};

	a = b;
}

trait Iterator<Self>
{
	fn iterate(),
	fn current() -> Self
}