Baz: struct { }
Foo::{ Baz: struct { } }
Foo::Bar::{ Baz: struct { } }

Test1: struct
{
	a: Baz,
	b: Foo::Baz,
	c: Foo::Bar::Baz,
	d: Bar::Baz
}

Test2: struct
{
	use Foo::_;

	a: Baz,
	b: Foo::Baz,
	c: Foo::Bar::Baz,
	d: Bar::Baz
}

Test3: struct
{
	use Foo::_;
	use Foo::Bar::_;

	a: Baz,
	b: Foo::Baz,
	c: Foo::Bar::Baz,
	d: Bar::Baz,
	e: Bar,
	f: _::Baz,
	g: _::Foo::Baz,
	h: _::Foo::Bar::Baz,
	i: _::Foo
}


test: fn(x: Baz, y: _::Foo::Baz) -> (_::Baz, Foo::Bar::Baz)
{
	x;
	let z;
	let z: Int;
	let z = 0;
	let z: Int = 0;
	let _;
	let _: Float32;
	let _ = 0;
	let _: Float32 = 0;

	while x	{ do() };
	return w;
}